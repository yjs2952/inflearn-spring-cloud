server:
  port: 8000
eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://localhost:8761/eureka
spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates: # 조건절이라 생각하면 된다.
            - Path=/order-service/**  # 이 요청이 들어오면 무조건 (uri: http://localhost:8082/) 로 보내겠다.
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: # 조건절이라 생각하면 된다.
            - Path=/user-service/**  # 이 요청이 들어오면 무조건 (uri: http://localhost:8082/) 로 보내겠다.
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates: # 조건절이라 생각하면 된다.
            - Path=/catalog-service/**  # 이 요청이 들어오면 무조건 (uri: http://localhost:8082/) 로 보내겠다.
        - id: first-service
          uri: lb://MY-FIRST-SERVICE
          predicates: # 조건절이라 생각하면 된다.
            - Path=/first-service/**  # 이 요청이 들어오면 무조건 (uri: http://localhost:8081/) 로 보내겠다.
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates: # 조건절이라 생각하면 된다.
            - Path=/second-service/**  # 이 요청이 들어오면 무조건 (uri: http://localhost:8082/) 로 보내겠다.
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true

# 비동기식으로 netty가 실행된다.